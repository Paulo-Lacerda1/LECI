library IEEE;
use IEEE.STD_LOGIC_1164.all;

entity SeqDetFSM is
	port( reset : in std_logic;
			clk : in std_logic;
			xIn : in std_logic;
			zOut : out std_logic);
end SeqDetFSM;

architecture Behav of SeqDetFSM is
	type state is (Conf, Test, Concl);
	signal PS, NS : state;
	begin
		sync_proc: process(clk)
		begin
			if (rising_edge(clk)) then
				if (reset = '1') then
					PS <= Conf;
				else
					PS <= NS;
				end if;
			end if;
		end process;
	comb_proc : process(PS, xIn)
	begin
		zOut <= '0';
		case PS is
			when Conf =>
				if (xIn = '1') then NS <= S1;
				else NS <= Begining;
				end if;
			when Test =>
				if (xIn = '0') then NS <= S10;
				else NS <= S1;
				end if;
			when Concl =>
				if (xIn = '0') then NS <= S100;
				else NS <= S1;
				end if;
			when others => 
				NS <= Begining;
		end case;
	end process;
end Behav;
